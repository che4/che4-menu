<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	Default invocation of the POM packages artifacts (bundle, feature and update-site).
	
	Typical CI workflow:
	1. mvnw - build and package artifacts.If you want CI to assign qualifier to bundles (i.e. build number instead of timestamp) 
			set forceContextQualifier property, e.g.: mvnw deploy -DforceContextQualifier=34
	2. tag source code in scm with current version. You can get it from target/VERSION
	3. mvnw deploy:deploy - skips maven deploy, but upload update-site to p2 repository (bintray.com)
	
	If you need to update all version of maven and OSGi artifacts:
	mvnw -DnewVersion=1.0.1-SNAPSHOT
	
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.github.che4</groupId>
	<artifactId>io.github.che4.i18n.menu.releng</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Che4 :: I18n menu :: Release Engineering</name>
	<description>Parent artifact for github.com/che4/che4-menu project.</description>
	<inceptionYear>2019</inceptionYear>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<tycho-version>1.4.0</tycho-version>
		<revision>1</revision>
		<!-- maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format -->
		<version-range.target-platform>[0.0.2,0.1)</version-range.target-platform>
		<!-- to generate actual last version use command mvn versions:update-properties -->
		<version.target-platform>0.0.4</version.target-platform>
	</properties>
	<organization>
		<name>Che4</name>
		<url>https://che4.github.io</url>
	</organization>

	<developers>
		<developer>
			<id>dk</id>
			<name>Denis Kalinin</name>
			<email>dk@itranga.com</email>
			<roles>
				<role>developer</role>
				<role>architect</role>
				<role>release engineer</role>
			</roles>
			<timezone>UTC+2</timezone>
			<organization>Itranga OÃœ</organization>
			<organizationUrl>https://itranga.com</organizationUrl>
		</developer>
	</developers>
	
	<!-- TEST is configured according to this article http://mukis.de/pages/simple-junit-tests-with-tycho-and-surefire/ -->
	<!-- Consider to include POM-dependencies in Target Platform Definition - http://andriusvelykis.github.io/pde-target-maven-plugin/ -->
	<build>
		<defaultGoal>clean package</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho-version}</version>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>dependencies-copy</id>
						<phase>process-resources</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>read-project-version</id>
						<phase>initialize</phase>
						<goals><goal>parse-version</goal></goals>
					</execution>
				</executions>
			</plugin>
			<!--
				we use version-maven-plugin to get latest target platform, since neither bintray accepts SNAPSHOTS
				nor tycho target platform accepts version range
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>get-target-platform-version</id>
						<phase>initialize</phase>
						<goals><goal>update-properties</goal></goals>
					</execution>
				</executions>
				<!-- set property version.target-platform to the latest from the range version-range.target-platform -->
				<configuration>
					<properties><property>
							<name>version.target-platform</name>
							<version>${version-range.target-platform}</version>
					</property></properties>
				</configuration>
			</plugin>
			<!-- 
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-compiler-plugin</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			-->
			<!-- org.eclipse.tycho:tycho-surefire-plugin:test Tycho Surefire tests run in the integration-test phase -->
			<!--			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.11</version>
				
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.surefire</groupId>
						<artifactId>surefire-junit47</artifactId>
						<version>2.12</version>
					</dependency>
				</dependencies>
				
				<configuration>
					<includes>
						<include>**/*.class</include>
					</includes>
					<excludedGroups>com.test.annotation.type.IntegrationTest</excludedGroups>
				</configuration>
			</plugin>
			-->
			
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>target-platform-configuration</artifactId>
					<version>${tycho-version}</version>
					<configuration>
						<pomDependencies>consider</pomDependencies>
						<target>
							<artifact>
							<groupId>io.github.che4</groupId>
								<artifactId>target-dev-platform</artifactId>
								<version>${version.target-platform}</version>
							</artifact>
						</target>
						<environments>
							<environment>
								<os>win32</os><ws>win32</ws><arch>x86_64</arch>
							</environment>
						</environments>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-packaging-plugin</artifactId>
					<version>${tycho-version}</version>
					<configuration>
						<strictVersions>false</strictVersions>
					</configuration>
					<!-- Contribute the "buildQualifier" property to the environment -->
					<executions>
						<execution>
							<goals>
								<goal>build-qualifier</goal>
							</goals>
							<phase>validate</phase>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-p2-repository-plugin</artifactId>
					<version>${tycho-version}</version>
				</plugin>
				<plugin>
					<!-- https://github.com/jbosstools/jbosstools-maven-plugins/tree/master/tycho-plugins/repository-utils -->
					<groupId>org.jboss.tools.tycho-plugins</groupId>
					<artifactId>repository-utils</artifactId>
					<version>1.4.0</version>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
					<configuration>
						<skip>true</skip>
						<!-- deployAtEnd>true</deployAtEnd -->
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	

	
	<profiles>
		<profile>
			<id>changeVersion</id>
			<activation>
				<property>
					<name>newVersion</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-versions-plugin</artifactId>
						<version>${tycho-version}</version>
						<executions>
							<execution>
								<id>set-release-versions</id>
								<phase>initialize</phase>
								<goals><goal>set-version</goal></goals>
								<configuration>
									<newVersion>${newVersion}</newVersion>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>releng</id>
			<activation>
				<property>
					<name>!newVersion</name>
				</property>
			</activation>
			<modules>
				<module>../menu.plugin</module>
				<module>../menu.feature</module>
				<!-- module>../menu.plugin.ru</module -->
				<module>../menu.update-site</module>
			</modules>

			<build>
				<defaultGoal>clean validate resources:resources package</defaultGoal>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<includes>
							<include>VERSION</include>
						</includes>
						<filtering>true</filtering>
						<targetPath>${project.build.directory}</targetPath>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-packaging-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- THOUSE PROFILES TO BE DELETED!!! -->
		<profile>
			<id>set-version</id>
			<build>
				<plugins>
					<!-- parse project version
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<id>read-project-version</id>
								<phase>initialize</phase>
								<goals><goal>parse-version</goal></goals>
							</execution>
						</executions>
					</plugin>
					 -->
					<!-- Change SNAPSHOT to timestamp and update children modules -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>3.0.0-M1</version>
						<executions>
							<execution>
								<id>enforce-versions</id>
								<goals><goal>enforce</goal></goals>
								<configuration>
									<rules>
										<requireProperty>
											<property>newVersion</property>
										</requireProperty>
									</rules>
									<failFast>true</failFast>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<!-- run mvn org.eclipse.tycho:tycho-versions-plugin:set-version -DnewVersion=2.5.0-SNAPSHOT -->
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-versions-plugin</artifactId>
						<version>${tycho-version}</version>
						<executions>
							<execution>
								<id>set-release-versions</id>
								<phase>initialize</phase>
								<goals><goal>set-version</goal></goals>
								<configuration>
									<!-- 
									<newVersion>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</newVersion>
									-->
									<newVersion>${newVersion}</newVersion>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- use this version to get latest target platform, since bintray doesn't accept SNAPSHOTS -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>versions-maven-plugin</artifactId>
						<version>2.5</version>
						<executions>
							<execution>
								<id>get-target-platform-version</id>
								<phase>initialize</phase>
								<goals><goal>update-properties</goal></goals>
							</execution>
						</executions>
						<configuration>
							<properties><property>
									<name>version.target-platform</name>
									<version>${version-range.target-platform}</version>
							</property></properties>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<!-- Dependencies to resolve last version on bintray.com -->
			<dependencies>
				<dependency>
					<groupId>io.github.che4</groupId>
					<artifactId>target-dev-platform</artifactId>
					<version>${version.target-platform}</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>set-release-version</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-maven-plugin</artifactId>
						<version>${tycho-version}</version>
						<extensions>true</extensions>
					</plugin>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>target-platform-configuration</artifactId>
					</plugin>
					<!-- parse project version -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>3.0.0</version>
						<executions>
							<execution>
								<id>parse-version</id>
								<phase>initialize</phase>
								<goals>
									<goal>parse-version</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<!-- run mvn org.eclipse.tycho:tycho-versions-plugin:set-version -DnewVersion=2.5.0-SNAPSHOT -->
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-versions-plugin</artifactId>
						<version>${tycho-version}</version>
						<executions>
							<execution>
								<id>set-release-versions</id>
								<phase>initialize</phase>
								<goals><goal>set-version</goal></goals>
								<configuration>
									<newVersion>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</newVersion>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Change SNAPSHOT to timestamp and update children modules 
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>versions-maven-plugin</artifactId>
						<version>2.5</version>
						<executions>
							<execution>
								<id>set-pom-version</id>
								<phase>initialize</phase>
								<goals><goal>set</goal></goals>
								<configuration>
									<processAllModules>false</processAllModules>
									<newVersion>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</newVersion>
								</configuration>
							</execution>
						</executions>
					</plugin>
					-->
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>
		<repository>
		<!-- Duplicating the Maven Central repository here (as it is already coming from Super POM) makes the build much faster,
			as the Maven Central is now treated as the first (default) repository (because it is before the JBoss.org one).
			Artifacts with release (fixed) versions are being downloaded primarily from there. Without the central being the
			first repository the JBoss.org Nexus would be contacted first and since it is quite slow it slows down the build.
			We use JBoss.org repo only to download our SNAPSHOTs. -->
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>public-bintray</id>
			<url>https://dl.bintray.com/che4/maven</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<!-- Duplicating the Maven Central repository here (as it is already coming from Super POM) makes the build much faster,
				as the Maven Central is now treated as the first (default) repository (because it is before the JBoss.org one).
				Artifacts with release (fixed) versions are being downloaded primarily from there. Without the central being the
				first repository the JBoss.org Nexus would be contacted first and since it is quite slow it slows down the build.
				We use JBoss.org repo only to download our SNAPSHOTs. -->
			<id>central</id>
			<name>Central Repository</name>
			<url>https://repo.maven.apache.org/maven2</url>
			<layout>default</layout>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Repository Group</name>
			<url>https://repository.jboss.org/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	
	<url>https://github.com/che4/che4-menu</url>
	<scm>
		<url>https://github.com/che4/che4-menu</url>
		<connection>scm:git:https://github.com/che4/che4-menu.git</connection>
		<developerConnection>scm:git:git@github.com:che4/che4-menu.git</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/che4/che4-menu/issues</url>
	</issueManagement>
	<ciManagement>
		<system>travis</system>
	</ciManagement>
</project>